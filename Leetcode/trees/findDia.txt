/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) 
    {
        int maxDia = 0;
        getHeight(root, maxDia);
        return maxDia;
        
    }

    int getHeight(TreeNode *root, int &maxDia)
    {
        if(root == nullptr)
        {
            return 0;
        }

        int leftH = getHeight(root->left, maxDia);
        int rightH = getHeight(root->right, maxDia);

        int curDia = leftH + rightH;

        maxDia = max(curDia, maxDia);

        return 1 + max(leftH, rightH);
    }
};