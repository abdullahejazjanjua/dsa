/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) 
    {
        ListNode *sortedList = NULL;
        ListNode *cur = sortedList;
        while (list1 != NULL && list2 != NULL)
        {
            if (list1->val > list2->val)
            {
                if (sortedList == NULL)
                {
                    sortedList = list2; 
                    cur = sortedList;
                }
                else
                {
                    cur->next = list2;
                    cur = list2;
                }
                list2 = list2->next;
            }
            else
            {
                if (sortedList == NULL)
                {
                    sortedList = list1; 
                    cur = sortedList;
                }
                else
                {
                    cur->next = list1;
                    cur = list1;
                }
                list1 = list1->next;
            }
        }
       if (list1 == NULL)
        {
            if (sortedList == NULL)
            {
                sortedList = list2;
            }
            else
            {
                cur->next = list2;
            }
        }
        else
        {
            if (sortedList == NULL)
            {
                sortedList = list1;
            }
            else
            {
                cur->next = list1;
            }
        }
        
        return sortedList;
    }

    /*void addAtTail(ListNode *&head, ListNode *newNode)
    {
        ListNode *Cur = head;
        if (Cur == NULL)
        {
            head = newNode;
        }
        else
        {
            while(Cur->next != NULL)
            {
                Cur = Cur->next;
            }
            Cur->next = newNode;
        }
    }*/
};