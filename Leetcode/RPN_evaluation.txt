#include <stack>
class Solution {
public:
    bool isOperator(string c) 
    {
        return c == "+" || c == "-" || c == "*" || c == "/";
    }
    int evalRPN(vector<string>& tokens) 
    {
        stack <int> RPN;
        for (string c : tokens)
        {
            if (isOperator(c))
            {
                int a = RPN.top();
                RPN.pop();
                int b = RPN.top();
                RPN.pop();
                int ans = 0;
                switch(c[0])
                {
                    case '-':
                        ans = b - a;
                        break;
                    case '+':
                        ans = a + b;
                        break;
                    case '*':
                        ans = a * b;
                        break;
                    case '/':
                        ans = b / a;
                        break;
                }
                RPN.push(ans);
            }
            else
                RPN.push(stoi(c));
        }  
        int solution = RPN.top();
        RPN.pop();
        return solution; 
    }
};